# Generated by Django 5.1.4 on 2025-03-23 07:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('patient', '0006_remove_doctor_password_remove_doctor_username_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pharmacie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(default='N/A', max_length=255, unique=True)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(default='N/A', max_length=20)),
            ],
        ),
        migrations.RemoveField(
            model_name='receptionist',
            name='user',
        ),
        migrations.AddField(
            model_name='appointment',
            name='statut',
            field=models.CharField(choices=[('en_attente', 'En attente'), ('confirme', 'Confirmé'), ('annule', 'Annulé')], default='en_attente', max_length=20),
        ),
        migrations.AddField(
            model_name='hospital',
            name='telephone',
            field=models.CharField(default='N/A', max_length=20),
        ),
        migrations.AlterField(
            model_name='appointment',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='specialization',
            field=models.CharField(choices=[('generaliste', 'Généraliste'), ('radiologue', 'Radiologue'), ('laborantin', 'Laborantin'), ('cardiologue', 'Cardiologue'), ('dermatologue', 'Dermatologue'), ('endocrinologue', 'Endocrinologue'), ('gastroenterologue', 'Gastro-entérologue'), ('gynecologue', 'Gynécologue'), ('neurologue', 'Neurologue'), ('ophtalmologue', 'Ophtalmologue'), ('orthopediste', 'Orthopédiste'), ('otorhinolaryngologiste', 'ORL (Oto-rhino-laryngologiste)'), ('pediatre', 'Pédiatre'), ('psychiatre', 'Psychiatre'), ('pneumologue', 'Pneumologue'), ('rhumatologue', 'Rhumatologue'), ('urologue', 'Urologue'), ('anesthesiste', 'Anesthésiste'), ('oncologue', 'Oncologue'), ('hematologue', 'Hématologue'), ('medecin_du_travail', 'Médecin du Travail'), ('medecin_urgentiste', 'Médecin Urgentiste')], default='generaliste', max_length=100),
        ),
        migrations.AlterField(
            model_name='hospital',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='hospital',
            name='name',
            field=models.CharField(default='N/A', max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='patient',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='patient',
            name='name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('patient', 'Patient'), ('medecin', 'Médecin'), ('radiologue', 'Radiologue'), ('laborantin', 'Laborantin'), ('pharmacien', 'Pharmacien')], default='patient', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='patient',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='DossierMedical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('contenu', models.TextField()),
                ('diagnosis', models.CharField(blank=True, max_length=100, null=True)),
                ('drug', models.CharField(blank=True, max_length=100, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('doctors', models.ManyToManyField(related_name='dossiers_medicals', to='patient.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.patient')),
            ],
        ),
        migrations.CreateModel(
            name='pharmacien',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('pharmacie', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='patient.pharmacie')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('medicaments', models.TextField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient.doctor')),
                ('patient', models.ForeignKey(limit_choices_to={'role': 'patient'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.DeleteModel(
            name='PatientProfile',
        ),
        migrations.DeleteModel(
            name='Receptionist',
        ),
    ]
